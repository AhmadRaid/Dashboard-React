import AdaptableCard from '@/components/shared/AdaptableCard'
import { ClientWithOrdersData } from '@/@types/clients'
import { HiCheckCircle, HiPlusCircle, HiXCircle } from 'react-icons/hi'
import CreateGurentee from './CreateGurentee'
import { useState } from 'react'
import ChangeGuranteeStatusConfirmation from './ChangeGuranteeStatusConfirmation'
import GuaranteePdfExport from './GuaranteePdfExport'
import DataTable from '@/components/shared/DataTable'
import type { ColumnDef } from '@/components/shared/DataTable'
import { Badge } from '@/components/ui'
import { Button } from '@/components/ui'

const formatDate = (isoString?: string) => {
    if (!isoString) return ''
    const date = new Date(isoString)
    return date.toLocaleDateString('en-GB', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit',
    })
}

type OrdersClientFieldsProps = {
    values: ClientWithOrdersData
    readOnly?: boolean
}

const OrdersClientFields = (props: OrdersClientFieldsProps) => {
    const [addGuaranteeDialogOpen, setAddGuaranteeDialogOpen] = useState(false)
    const [changeGuaranteeStatusDialog, setChangeGuaranteeStatusDialog] =
        useState<{
            open: boolean
            orderId?: string
            guaranteeId?: string
            status?: string
        }>({ open: false })

    const openChangeGuaranteeStatusDialog = (
        orderId?: string,
        guaranteeId?: string,
        status?: string
    ) => {
        setChangeGuaranteeStatusDialog({
            open: true,
            orderId,
            guaranteeId,
            status,
        })
    }

    const closeChangeGuaranteeStatusDialog = () => {
        setChangeGuaranteeStatusDialog((prev) => ({
            ...prev,
            open: false,
        }))
    }

    const { values, readOnly } = props

    // Merged Orders and Guarantees columns
    const ordersColumns: ColumnDef<any>[] = [
        { header: 'نوع السيارة', accessorKey: 'carType' },
        { header: 'موديل السيارة', accessorKey: 'carModel' },
        { header: 'لون السيارة', accessorKey: 'carColor' },
        {
            header: 'مدة الضمان',
            accessorKey: 'guarantee.typeGuarantee',
            cell: (props) => (
                props.row.original.guarantee?.length > 0 ? 
                    props.row.original.guarantee[0].typeGuarantee : 
                    '-'
            )
        },
        {
            header: 'حالة الضمان',
            accessorKey: 'guarantee.status',
            cell: (props) => (
                props.row.original.guarantee?.length > 0 ? (
                    <Badge color={props.row.original.guarantee[0].status === 'active' ? 'emerald' : 'red'}>
                        {props.row.original.guarantee[0].status === 'active' ? 'مفعل' : 'غير مفعل'}
                    </Badge>
                ) : (
                    <span className="text-gray-400">لا يوجد</span>
                )
            )
        },
        {
            header: 'تاريخ بدء الضمان',
            accessorKey: 'guarantee.startDate',
            cell: (props) => (
                props.row.original.guarantee?.length > 0 ? 
                    formatDate(props.row.original.guarantee[0].startDate) : 
                    '-'
            )
        },
        {
            header: 'تاريخ انتهاء الضمان',
            accessorKey: 'guarantee.endDate',
            cell: (props) => (
                props.row.original.guarantee?.length > 0 ? 
                    formatDate(props.row.original.guarantee[0].endDate) : 
                    '-'
            )
        },
        {
            header: 'الضمانات',
            accessorKey: 'guarantee',
            cell: (props) => (
                <div className="flex gap-1">
                    {props.row.original.guarantee?.length > 0 ? (
                        <>
                            <GuaranteePdfExport guarantees={props.row.original.guarantee} />
                            <Badge>
                                {props.row.original.guarantee.length} ضمان
                            </Badge>
                        </>
                    ) : (
                        <span className="text-gray-400">لا يوجد</span>
                    )}
                </div>
            )
        },
        {
            header: 'الإجراءات',
            accessorKey: 'actions',
            cell: (props) => (
                <div className="flex gap-2">
                    <Button
                        size="xs"
                        variant="solid"
                        onClick={() => setAddGuaranteeDialogOpen(true)}
                        icon={<HiPlusCircle />}
                    >
                        إضافة ضمان
                    </Button>
                    {props.row.original.guarantee?.length > 0 && (
                        <Button
                            size="xs"
                            variant="twoTone"
                            onClick={() => openChangeGuaranteeStatusDialog(
                                props.row.original._id,
                                props.row.original.guarantee[0]._id,
                                props.row.original.guarantee[0].status
                            )}
                            color={props.row.original.guarantee[0].status === 'active' ? 'red-600' : 'green-600'}
                            icon={props.row.original.guarantee[0].status === 'active' ? <HiXCircle /> : <HiCheckCircle />}
                        >
                            {props.row.original.guarantee[0].status === 'active' ? 'إلغاء التفعيل' : 'تفعيل'}
                        </Button>
                    )}
                </div>
            )
        }
    ]

    return (
        <>
            <AdaptableCard divider className="mb-4">
                <h5 className="mb-4">معلومات العميل الأساسية</h5>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
                    <div className="border rounded p-4">
                        <h6 className="text-sm font-medium text-gray-500 mb-2">الاسم الكامل</h6>
                        <p>{values.firstName} {values.middleName} {values.lastName}</p>
                    </div>
                    <div className="border rounded p-4">
                        <h6 className="text-sm font-medium text-gray-500 mb-2">البريد الإلكتروني</h6>
                        <p>{values.email || '-'}</p>
                    </div>
                    <div className="border rounded p-4">
                        <h6 className="text-sm font-medium text-gray-500 mb-2">رقم الهاتف</h6>
                        <p>{values.phone || '-'}</p>
                    </div>
                    <div className="border rounded p-4">
                        <h6 className="text-sm font-medium text-gray-500 mb-2">نوع العميل</h6>
                        <p>{values.clientType === 'individual' ? 'فردي' : 'شركة'}</p>
                    </div>
                    <div className="border rounded p-4">
                        <h6 className="text-sm font-medium text-gray-500 mb-2">تاريخ الإنشاء</h6>
                        <p>{formatDate(values.createdAt)}</p>
                    </div>
                    <div className="border rounded p-4">
                        <h6 className="text-sm font-medium text-gray-500 mb-2">إجمالي الطلبات</h6>
                        <p>{values.orderStats?.totalOrders || 0}</p>
                    </div>
                </div>

                <h5 className="mt-8 mb-4">الطلبات</h5>
                <DataTable
                    columns={ordersColumns}
                    data={values.orders || []}
                    disablePagination
                    disableSorting
                />
            </AdaptableCard>

            <CreateGurentee
                dialogIsOpen={addGuaranteeDialogOpen}
                setIsOpen={setAddGuaranteeDialogOpen}
                orderId={values.orders?.[0]?._id}
            />
            <ChangeGuranteeStatusConfirmation
                status={changeGuaranteeStatusDialog.status}
                orderId={changeGuaranteeStatusDialog.orderId}
                gId={changeGuaranteeStatusDialog.guaranteeId}
                dialogIsOpen={changeGuaranteeStatusDialog.open}
                closeDialog={closeChangeGuaranteeStatusDialog}
            />
        </>
    )
}

export default OrdersClientFields